version: '3.8'

services:
  # Test database
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: riggershared_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d riggershared_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Redis
  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    command: redis-server --requirepass test_password
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "test_password", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Application under test
  app-test:
    build:
      context: .
      target: testing
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://test_user:test_password@postgres-test:5432/riggershared_test
      REDIS_URL: redis://:test_password@redis-test:6379
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    volumes:
      - ./coverage:/app/coverage
      - ./test-results:/app/test-results
    command: npm run test:ci

  # Integration test runner
  integration-tests:
    build:
      context: .
      target: testing
    environment:
      NODE_ENV: test
      API_BASE_URL: http://app-test:3000
      DATABASE_URL: postgresql://test_user:test_password@postgres-test:5432/riggershared_test
      REDIS_URL: redis://:test_password@redis-test:6379
    depends_on:
      - app-test
      - postgres-test
      - redis-test
    volumes:
      - ./test-results:/app/test-results
    command: npm run test:integration

volumes:
  postgres_test_data:

networks:
  default:
    name: riggershared-test-network

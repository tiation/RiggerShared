[build]
  publish = "dist"
  command = "npm run build:prod"

[build.environment]
  NODE_VERSION = "18"
  NODE_ENV = "production"

# Redirects for documentation and demo
[[redirects]]
  from = "/docs/*"
  to = "/docs/:splat"
  status = 200

[[redirects]]
  from = "/demo"
  to = "/examples/index.html"
  status = 200

# API documentation redirect
[[redirects]]
  from = "/api-docs/*"
  to = "/docs/api/:splat"
  status = 200

# Enterprise-grade security headers
[[headers]]
  for = "/*"
  [headers.values]
    # Frame protection
    X-Frame-Options = "SAMEORIGIN"
    
    # XSS protection
    X-XSS-Protection = "1; mode=block"
    
    # MIME type sniffing protection
    X-Content-Type-Options = "nosniff"
    
    # Referrer policy for privacy
    Referrer-Policy = "strict-origin-when-cross-origin"
    
    # Strict transport security (HTTPS only)
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    
    # Content Security Policy for library documentation
    Content-Security-Policy = """
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com https://cdnjs.cloudflare.com;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com;
      img-src 'self' data: https: blob:;
      font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com;
      connect-src 'self' https://*.tiation.net;
      media-src 'self' https:;
      object-src 'none';
      base-uri 'self';
      form-action 'self';
      frame-ancestors 'self';
      upgrade-insecure-requests;
    """
    
    # Permissions policy
    Permissions-Policy = """
      accelerometer=(),
      ambient-light-sensor=(),
      autoplay=(),
      battery=(),
      camera=(),
      cross-origin-isolated=(),
      display-capture=(),
      document-domain=(),
      encrypted-media=(),
      execution-while-not-rendered=(),
      execution-while-out-of-viewport=(),
      fullscreen=(),
      geolocation=(),
      gyroscope=(),
      keyboard-map=(),
      magnetometer=(),
      microphone=(),
      midi=(),
      navigation-override=(),
      payment=(),
      picture-in-picture=(),
      publickey-credentials-get=(),
      screen-wake-lock=(),
      sync-xhr=(),
      usb=(),
      web-share=(),
      xr-spatial-tracking=()
    """

# Library files - long cache for immutable versions
[[headers]]
  for = "/lib/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, HEAD, OPTIONS"

# NPM package files
[[headers]]
  for = "/*.tgz"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "application/gzip"

# Documentation assets
[[headers]]
  for = "/docs/*"
  [headers.values]
    Cache-Control = "public, max-age=86400"

# Examples and demos
[[headers]]
  for = "/examples/*"
  [headers.values]
    Cache-Control = "public, max-age=3600"

# Theme files
[[headers]]
  for = "/themes/*"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Access-Control-Allow-Origin = "*"

# Package.json for CDN usage
[[headers]]
  for = "/package.json"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "application/json"
    Access-Control-Allow-Origin = "*"

# README and documentation
[[headers]]
  for = "/README.md"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "text/markdown"

# Environment-specific build settings
[context.production]
  command = "npm run build:prod"

[context.staging]
  command = "npm run build:staging"

[context.branch-deploy]
  command = "npm run build:dev"

# Functions for package management
[functions]
  directory = "netlify/functions"

# Forms for feedback
[forms]
  spam_filter = true
